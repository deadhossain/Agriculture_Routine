/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agricultureproject;

import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author Dead
 */
public class StartCultivation extends javax.swing.JFrame {

    /**
     * Creates new form StartCultivation
     */
    DatabaseConnection dc = new DatabaseConnection();
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    Calendar cal = Calendar.getInstance();
    Border empty = BorderFactory.createLineBorder(Color.red, 1);
    Border notEmpty = BorderFactory.createLineBorder(Color.gray, 1);
    public StartCultivation(String id) {
        initComponents();
        lblFarmerId.setText(id);
        lblFarmerId.setVisible(false);
        comboNewPlantId.setVisible(false);
        getAllPlantInformation();
        dateStart.setMinSelectableDate(new Date());
        dateStart.setDate(new Date());
    }
    
    public void getAllPlantInformation()
    {
        comboNewPlantName.removeAllItems();
        comboNewPlantId.removeAllItems();
        HashMap<Integer,HashMap> plant_setup = new HashMap<>();

        plant_setup = dc.getAllInformation("plant_setup_mst_tb"," where id not in (select plant_id from personal_schedule_tb where start_date = CURRENT_DATE and farmer_id =" + lblFarmerId.getText() +" group by plant_id)");
        
        for (Object key : plant_setup.keySet())
        {
            comboNewPlantId.addItem(plant_setup.get(key).get("id").toString());
            comboNewPlantName.addItem(plant_setup.get(key).get("plant_name").toString());
        }
    }
    
    public boolean emptyInput()
    {
        if(comboNewPlantName.getItemCount()==0)
        {
            comboNewPlantName.setBorder(empty);
            return false;
        }
        else
        {
            comboNewPlantName.setBorder(notEmpty);
        }
        if(dateStart.getDate()==null)
        {
            dateStart.setBorder(empty);
            return false;
        }
        else
        {
            dateStart.setBorder(notEmpty);
        }
        
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        comboNewPlantName = new javax.swing.JComboBox<>();
        jLabel55 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        lblFarmerId = new javax.swing.JLabel();
        comboNewPlantId = new javax.swing.JComboBox<>();
        lblGenerate = new javax.swing.JLabel();
        dateStart = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel55.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel55.setText("Select Plant : ");

        jLabel59.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel59.setText("Start Date: ");

        lblFarmerId.setText("1");

        lblGenerate.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblGenerate.setText("Generate ");
        lblGenerate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGenerateMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblGenerate)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel59)
                            .addComponent(jLabel55))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comboNewPlantId, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblFarmerId))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dateStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboNewPlantName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboNewPlantId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFarmerId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboNewPlantName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel59))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblGenerate)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblGenerateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGenerateMouseClicked
        // TODO add your handling code here:
        
        int dialogButton = JOptionPane.showConfirmDialog (null, "Are you sure?","WARNING",JOptionPane.YES_NO_OPTION);

        if(dialogButton == JOptionPane.YES_OPTION)
        {
            boolean check = emptyInput();
            if(check == true)
            {
                HashMap<Integer,HashMap> plant_setup = new HashMap<>();
                HashMap generate_schedule = new HashMap();
                String id = comboNewPlantId.getItemAt(comboNewPlantName.getSelectedIndex());
                String startDate = sdf.format(dateStart.getDate());

                // add Date

                Date date = null,futureDate;
                try {
                    date = sdf.parse(startDate); 

                } catch (ParseException ex) {
                    Logger.getLogger(StartCultivation.class.getName()).log(Level.SEVERE, null, ex);
                }




                plant_setup = dc.getAllInformation("plant_setup_chd_tb"," where plant_id = " +id );

                for (Object key : plant_setup.keySet())
                {
                    //System.out.println(plant_setup.get(key).get("days"));
                    //System.out.println(plant_setup.get(key).get("steps_desc"));
                    cal.setTime(date);
                    cal.add(Calendar.DAY_OF_YEAR,  Integer.parseInt(plant_setup.get(key).get("days").toString())-1); // Add 30 days
                    //futureDate = cal.getTime();
                    generate_schedule.put("start_date", startDate);
                    generate_schedule.put("date", sdf.format(cal.getTime()));
                    generate_schedule.put("plant_id", id);
                    generate_schedule.put("farmer_id", lblFarmerId.getText());
                    generate_schedule.put("step_desc", plant_setup.get(key).get("steps_desc"));
                    dc.insertData("personal_schedule_tb",generate_schedule);
                }

                JOptionPane.showMessageDialog (null, "New cultivation has been Started");
                UserPanel up = new UserPanel();
                up.getPersonalSchedulePlantName();
                up.refreshPersonalScheduleTable();
                this.dispose();
            }
            else
            {
                JOptionPane.showMessageDialog (null, "Please Fill Up All The Fields");
            }
            
        }

    }//GEN-LAST:event_lblGenerateMouseClicked

  
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboNewPlantId;
    private javax.swing.JComboBox<String> comboNewPlantName;
    private com.toedter.calendar.JDateChooser dateStart;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblFarmerId;
    private javax.swing.JLabel lblGenerate;
    // End of variables declaration//GEN-END:variables
}
